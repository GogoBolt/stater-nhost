import { RefOrValue } from './helpers';

/**
 * Use the composable `useSignOut` to sign out the user.
 *
 * @example
 * ```jsx
 * import { useSignOut } from '@nhost/vue'
 *
 * const { signOut, isSuccess } = useSignOut()
 *
 * const handleSignOut = async (e) => {
 *   e.preventDefault()
 *   await signOut()
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/vue/use-sign-out
 */
export declare const useSignOut: () => {
    signOut: (all?: RefOrValue<boolean | undefined>) => Promise<import('@nhost/nhost-js').SignOutlessHandlerResult>;
    isSuccess: import('vue').Ref<boolean, boolean>;
    error: import('vue').Ref<import('@nhost/nhost-js').AuthErrorPayload | null, import('@nhost/nhost-js').AuthErrorPayload | null>;
};
//# sourceMappingURL=useSignOut.d.ts.map