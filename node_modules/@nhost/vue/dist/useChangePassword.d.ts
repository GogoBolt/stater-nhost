import { ChangePasswordHandlerResult, ChangePasswordState } from '@nhost/nhost-js';
import { ToRefs } from 'vue';
import { RefOrValue } from './helpers';

export interface ChangePasswordComposableResult extends ToRefs<ChangePasswordState> {
    changePassword(password: RefOrValue<string>): Promise<ChangePasswordHandlerResult>;
}
/**
 * Use the composable `useChangePassword` to change password for the user.
 *
 * @example
 * ```tsx
 * const { changePassword, isLoading, isSuccess, isError, error } = useChangePassword();
 *
 * watchEffect(() => {
 *   console.log(isLoading.value, isSuccess.value, isError.value, error.value);
 * })
 *
 * const handleFormSubmit = async (e) => {
 *   e.preventDefault();
 *
 *   await changePassword('my-new-password')
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/vue/use-change-password
 */
export declare const useChangePassword: () => ChangePasswordComposableResult;
//# sourceMappingURL=useChangePassword.d.ts.map