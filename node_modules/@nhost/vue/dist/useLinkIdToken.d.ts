import { ActionErrorState, ActionLoadingState, ActionSuccessState, LinkIdTokenHandlerParams, LinkIdTokenHandlerResult } from '@nhost/nhost-js';
import { ToRefs } from 'vue';

export interface LinkIdTokenResult extends ToRefs<ActionErrorState>, ToRefs<ActionSuccessState>, ToRefs<ActionLoadingState> {
    linkIdToken(params: LinkIdTokenHandlerParams): Promise<LinkIdTokenHandlerResult>;
}
/**
 * Use the hook `useLinkIdToken` to link a user account with the provider's account using an id token
 *
 * @example
 * ```tsx
 * const { linkIdToken, isLoading, isSuccess, isError, error } = useLinkIdToken()
 *
 * const handleLinkIdToken = async () => {
 *   await linkIdToken({
 *      provider: 'google',
 *      idToken: '...',
 *      nonce: '...'
 *   })
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/vue/use-link-id-token
 */
export declare const useLinkIdToken: () => LinkIdTokenResult;
//# sourceMappingURL=useLinkIdToken.d.ts.map