import { SignInSecurityKeyHandlerResult, SignInSecurityKeyState } from '@nhost/nhost-js';
import { ToRefs } from 'vue';

interface SignInSecurityKeyHandler {
    (): Promise<SignInSecurityKeyHandlerResult>;
}
export interface SignInSecurityKeyHookResult extends ToRefs<SignInSecurityKeyState> {
    signInSecurityKey: SignInSecurityKeyHandler;
}
interface SignInSecurityKeyResult {
    (): SignInSecurityKeyHookResult;
}
/**
 * Use the composable `useSignInSecurityKey` to sign in a user with a security key using the WebAuthn API
 *
 * @example
 * ```tsx
 * const { signInSecurityKey, needsEmailVerification, isLoading, isSuccess, isError, error } = useSignInSecurityKey()
 *
 * console.log({ needsEmailVerification, isLoading, isSuccess, isError, error });
 *
 * const handleFormSubmit = async (e) => {
 *   e.preventDefault();
 *
 *   await signInSecurityKey()
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/vue/use-sign-in-security-key
 */
export declare const useSignInSecurityKey: SignInSecurityKeyResult;
export {};
//# sourceMappingURL=useSignInSecurityKey.d.ts.map