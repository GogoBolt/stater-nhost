import { SignInPATHandlerResult, SignInPATState } from '@nhost/nhost-js';
import { ToRefs } from 'vue';
import { RefOrValue } from './helpers';

interface SignInPATResult extends ToRefs<SignInPATState> {
    signInPAT(pat: RefOrValue<string>): Promise<SignInPATHandlerResult>;
}
/**
 * Use the composable `useSignInPAT` to sign in a user using a personal access token.
 *
 * @example
 * ```tsx
 * const { signInPAT, isLoading, isSuccess, isError, error } = useSignInPAT()
 *
 * console.log({ isLoading, isSuccess, isError, error });
 *
 * const handleFormSubmit = async (e) => {
 *   e.preventDefault();
 *
 *   await signInPAT('8c5402d1-b05d-4825-a3ae-52d26402b89b')
 * }
 * ```
 *
 * @docs https://docs.nhost.io/reference/vue/use-sign-in-pat
 */
export declare const useSignInPAT: () => SignInPATResult;
export {};
//# sourceMappingURL=useSignInPAT.d.ts.map